AWSTemplateFormatVersion: '2010-09-09'
Description: This template sets up a cross account IAM role in order to
  enable CrowdStrike Falcon Discover for AWS functionality.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Crowdstrike Account Parameters. (Do Not Modify)
        Parameters:
          - CSAccountNumber
          - CSAssumingRoleName
      - Label:
          default: Crowdstrike Role Parameters.
        Parameters:
          - RoleName
          - ExternalID
      - Label:
          default: Crowdstrike Falcon API keys.
        Parameters:
          - FalconClientId
          - FalconSecret
      - Label:
          default: S3 Buckets.
        Parameters:
          - LogArchiveBucketName

    ParameterLabels:
      LogArchiveBucketName:
        default: Cloudtrail log bucket created by Control Tower
      RoleName:
        default: Default IAM Role (Can be modified)
      ExternalID:
        default: External ID Enter 6 or more characters alphanumeric without white space
      CSAccountNumber:
        default: Crowdstrke AWS Account ID we are granting access to the role. Do not modify
      CSAssumingRoleName:
        default: Crowdstrike Role we are granting access to the role.  Do not modify

Outputs:
  RoleARN:
    Description: The ARN of the role that can be assumed by Crowdstrike Discover.
    Value: !GetAtt 'S3AccessiamRole.Arn'

Mappings:
  S3perRegion:
    us-east-1:
      NAME: crowdstrike-sa-resources-ct-us-east-1
    us-east-2:
      NAME: crowdstrike-sa-resources-ct-us-east-2
    us-west-2:
      NAME: crowdstrike-sa-resources-ct-us-west-2
    eu-west-1:
      NAME: crowdstrike-sa-resources-ct-eu-west-1
    ap-southeast-2:
      NAME: crowdstrike-sa-resources-ct-ap-southeast-2

Parameters:

  RoleName:
    Description: The name of the cross account IAM role to be created.
    MinLength: '1'
    Type: String
    Default: FalconDiscover

  ExternalID:
    Description: String used in IAM role trust policy to designate who can assume the role we are creating.
    MinLength: '6'
    Type: String


  CSAccountNumber:
    AllowedPattern: '[0-9]+'
    Description: The 12 digit AWS account number to grant access to. Do not modify
    MaxLength: '12'
    MinLength: '12'
    Type: String
    Default: 292230061137

  CSAssumingRoleName:
    Description: Name of the IAM role used within CrowdStrike to assume access to. Do not modify
      your account.
    Type: String
    Default: "CS-Prod-HG-CsCloudconnectaws"

  FalconClientId:
    Description: Falcon OAuth2 Client ID.
    Type: String
    NoEcho: 'true'


  FalconSecret:
    Description: Falcon Oath2 API secret.
    Type: String
    NoEcho: 'true'

  LogArchiveBucketName:
    Type: String
    Description: Log Archive Bucket Name

  s3Bucket:
    Type: String
    Description: s3 bucket containing .. layer.zip, add_s3_notification.zip, register_logarchive_account.zip


Resources:
  launchLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaRoleToCaptureEvents
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            Condition: { }
      Path: /
      Policies:
        - PolicyName: Get_Values
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor1
              Effect: Allow
              Action:
                - s3:PutBucketNotification
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref LogArchiveBucketName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute

  publishToSnsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - LambdaRoleToPublishtoSNS
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            Condition: { }
      Path: /
      Policies:
        - PolicyName: PublishSNS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor1
              Effect: Allow
              Action:
                - sns:Publish
              Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute

  lambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.7
      Content:
        S3Bucket: !Ref s3Bucket
        S3Key: layer.zip
      Description: Layer for requests package
      LayerName: requests-package

  AddNotificationToBucketLambda:
    DependsOn:
      - launchLambdaRole
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          central_s3_bucket_account: !Ref AWS::AccountId
          cloudtrail_bucket_region: !Ref AWS::Region
          CSAccountNumber: !Ref CSAccountNumber
          CSAssumingRoleName: !Ref CSAssumingRoleName
          FalconClientId: !Ref FalconClientId
          FalconSecret: !Ref FalconSecret
          LocalAccount: !Ref AWS::AccountId

      Code:
        S3Bucket: !Ref s3Bucket
        S3Key: add_S3_notification.zip
      Layers:
        - !Ref lambdaLayer
      Handler: add_S3_notification.lambda_handler
      MemorySize: 128
      Role: !GetAtt launchLambdaRole.Arn
      Runtime: python3.7
      Timeout: 60

  TriggerAddNotificationLambda:
    Type: 'Custom::TriggerLambda'
    DependsOn: AddNotificationToBucketLambda
    Properties:
      FalconSecret: !Ref FalconSecret
      FalconClientId: !Ref FalconClientId
      log_archive_acct: !Ref AWS::AccountId
      region: !Ref AWS::Region
      log_archive_bucket: !Ref LogArchiveBucketName
      crwd_topic_arn: !Join
        - ''
        - - 'arn:aws:sns:'
          - !Ref 'AWS::Region'
          - ':292230061137:cs-cloudconnect-aws-cloudtrail'
      ServiceToken: !GetAtt
        - AddNotificationToBucketLambda
        - Arn


  S3AccessiamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref 'RoleName'
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref 'ExternalID'
            Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'CSAccountNumber'
                  - :role/
                  - !Ref 'CSAssumingRoleName'
            Sid: ''
        Version: '2012-10-17'
      Path: /
  iamPolicyCloudTrailS3Access:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ReadS3CloudTrailFiles
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref 'LogArchiveBucketName'
            Sid: ''
        Version: '2012-10-17'
      Roles:
        - !Ref 'S3AccessiamRole'
    DependsOn:
      - S3AccessiamRole
  iamPolicyDescribeAccess:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DescribeAPICalls
      PolicyDocument:
        Statement:
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeImages
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeVolumes
              - ec2:DescribeVpcs
              - ec2:DescribeRegions
              - ec2:DescribeSubnets
              - ec2:DescribeNetworkAcls
              - ec2:DescribeSecurityGroups
              - iam:ListAccountAliases
            Effect: Allow
            Resource: '*'
            Sid: ''
        Version: '2012-10-17'
      Roles:
        - !Ref 'S3AccessiamRole'
    DependsOn: S3AccessiamRole

  RegisterAcctLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CrowdstrikeRegisterAcctLambdaRole
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: 2012-10-17
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess

  TriggerLambda:
    Type: 'Custom::TriggerLambda'
    DependsOn:
      - "RegisterAcctLambdaRole"
      - "RegisterAccountWithDiscover"
    Properties:
      FalconSecret: !Ref FalconSecret
      FalconClientId: !Ref FalconClientId
      ExternalID: !Ref ExternalID
      ServiceToken: !GetAtt
        - RegisterAccountWithDiscover
        - Arn

  RegisterAccountWithDiscover:
    DependsOn:
      - "RegisterAcctLambdaRole"
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          central_s3_bucket_account: !Ref AWS::AccountId
          cloudtrail_bucket_region: !Ref AWS::Region
          iam_role_arn: !GetAtt "S3AccessiamRole.Arn"
          CSAccountNumber: !Ref CSAccountNumber
          CSAssumingRoleName: !Ref CSAssumingRoleName
          LocalAccount: !Ref AWS::AccountId

      Code:
        S3Bucket: !FindInMap [ S3perRegion, !Ref "AWS::Region", NAME ]
        S3Key: register_logarchive_account.zip
      Layers:
        - !Ref lambdaLayer
      Handler: register_logarchive_account.lambda_handler
      MemorySize: 128
      Role: !GetAtt RegisterAcctLambdaRole.Arn
      Runtime: python3.7
      Timeout: 60
