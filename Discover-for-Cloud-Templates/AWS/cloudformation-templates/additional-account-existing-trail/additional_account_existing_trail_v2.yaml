AWSTemplateFormatVersion: '2010-09-09'
Description: This template sets up a cross account IAM role in order to
  enable CrowdStrike Falcon Discover for AWS functionality.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Crowdstrike Role Parameters.
        Parameters:
          - RoleName
          - ExternalID
      - Label:
          default: Crowdstrike Falcon API keys.
        Parameters:
           - FalconClientId
           - FalconSecret
           - CrowdStrikeCloud
      - Label:
          default: Logging Account.
        Parameters:
          - LogArchiveAccount

    ParameterLabels:
      CrowdStrikeCloud:
        default: The CrowdStrike Cloud your CID is hosted in
      LogArchiveAccount:
        default: Log archive account number
      RoleName:
        default: Default IAM Role Name (Can be modified)
      ExternalID:
        default: External ID Enter 6 or more characters alphanumeric without white space


Mappings:
  S3perRegion:
    us-east-1:
      NAME: crowdstrike-sa-resources-ct-us-east-1
    us-east-2:
      NAME: crowdstrike-sa-resources-ct-us-east-2
    us-west-2:
      NAME: crowdstrike-sa-resources-ct-us-west-2
    eu-west-1:
      NAME: crowdstrike-sa-resources-ct-eu-west-1
    ap-southeast-2:
      NAME: crowdstrike-sa-resources-ct-ap-southeast-2

  CSCloud:
    us1:
      CSAssumingRoleName: CS-Prod-HG-CsCloudconnectaws
      CSAccountNumber: 292230061137
      SNSTopic: :292230061137:cs-cloudconnect-aws-cloudtrail

    us2:
      CSAssumingRoleName: mav-gyr-main-s001-cs-cloudconnectaws
      CSAccountNumber: 292230061137
      SNSTopic: :292230061137:cs-us2-cloudconnect-aws-cloudtrail

    eu:
      CSAssumingRoleName: lion-lanner-main-s001-cs-cloudconnectaws
      CSAccountNumber: 292230061137
      SNSTopic: :292230061137:cs-lion-cloudconnect-aws-cloudtrail

Parameters:

  CrowdStrikeCloud:
    Default: us1
    Description: The CrowdStrike Cloud your CID is hosted in us1, us2, eu
    Type: String
    AllowedValues:
      - us1
      - us2
      - eu

  RoleCreationDelayTimer:
    Description: Delay timer wait for role creation before registering acct (Time in seconds)
    Type: Number
    MaxValue: 800
    Default: 20

  RoleName:
    Description: The name of the cross account IAM role to be created.
    MinLength: '1'
    Type: String
    Default: FalconDiscover2

  ExternalID:
    Description: String used in IAM role trust policy to designate who can assume the role we are creating.
    MinLength: '6'
    Type: String

  FalconClientId:
    Description: Falcon OAuth2 Client ID.
    Type: String
    NoEcho: 'true'

  FalconSecret:
    Description: Falcon Oath2 API secret.
    Type: String
    NoEcho: 'true'

  LogArchiveBucketRegion:
    Type: String
    Description: The Region where the log archive bucket is hosted

  LogArchiveAccount:
    Description: The account number of the account containing the cloudtrail log bucket
    Type: String

Resources:



  lambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.7
      Content:
        S3Bucket: !FindInMap [ S3perRegion, !Ref "AWS::Region", NAME ]
        S3Key: falconpy-layer.zip
      Description: Layer for requests package
      LayerName: falconpy-package

  DiscoverAccessiamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref 'RoleName'
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref 'ExternalID'
            Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !FindInMap [ CSCloud, !Ref CrowdStrikeCloud, CSAccountNumber ]
                  - :role/
                  - !FindInMap [ CSCloud, !Ref CrowdStrikeCloud, CSAssumingRoleName ]
            Sid: ''
        Version: '2012-10-17'
      Path: /
  iamPolicyDescribeAccess:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DescribeAPICalls
      PolicyDocument:
        Statement:
          - Action:
              - ec2:DescribeInstances
              - ec2:DescribeImages
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeVolumes
              - ec2:DescribeVpcs
              - ec2:DescribeRegions
              - ec2:DescribeSubnets
              - ec2:DescribeNetworkAcls
              - ec2:DescribeSecurityGroups
              - iam:ListAccountAliases
            Effect: Allow
            Resource: '*'
            Sid: ''
        Version: '2012-10-17'
      Roles:
        - !Ref 'DiscoverAccessiamRole'
    DependsOn: DiscoverAccessiamRole

  RegisterAcctLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrowdstrikeRegisterAcctLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            Condition: {}
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess

  TriggerRegisterAcctLambda:
    Type: 'Custom::TriggerLambda'
    DependsOn:
      - "RegisterAcctLambdaRole"
      - "RegisterAccountWithDiscover"
    Properties:
      FalconSecret: !Ref FalconSecret
      FalconClientId: !Ref FalconClientId
      ExternalID: !Ref ExternalID
      ServiceToken: !GetAtt
        - RegisterAccountWithDiscover
        - Arn

  RegisterAccountWithDiscover:
    DependsOn:
      - "RegisterAcctLambdaRole"
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          CrowdStrikeCloud: !Ref CrowdStrikeCloud

          central_s3_bucket_account: !Ref LogArchiveAccount
          cloudtrail_bucket_region: !Ref LogArchiveBucketRegion
          iam_role_arn: !GetAtt "DiscoverAccessiamRole.Arn"
          CSAccountNumber: !FindInMap [ CSCloud, !Ref CrowdStrikeCloud, CSAccountNumber ]
          CSAssumingRoleName: !FindInMap [ CSCloud, !Ref CrowdStrikeCloud, CSAssumingRoleName ]
          LocalAccount: !Ref AWS::AccountId
          aws_region: !Ref AWS::Region
          delay_timer: !Ref RoleCreationDelayTimer
      Code:
        S3Bucket: !FindInMap [ S3perRegion, !Ref "AWS::Region", NAME ]
        S3Key: register_new_accountv4.zip
      Layers:
        - !Ref lambdaLayer
      Handler: register_new_accountv4.lambda_handler
      MemorySize: 128
      Role: !GetAtt RegisterAcctLambdaRole.Arn
      Runtime: python3.7
      Timeout: 60