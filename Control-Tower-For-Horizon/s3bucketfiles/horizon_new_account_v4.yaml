AWSTemplateFormatVersion: '2010-09-09'
Description: This template sets up a lambda function that will setup your account monitoring using Falcon Horizon.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Cross Account IAM Role Details from CrowdStrike.
        Parameters:
          - CSAccountNumber
          - CSAssumingRoleName
      - Label:
          default: AWS Account Details
        Parameters:
          - organizationalUnitId
    ParameterLabels:
      CSAccountNumber:
        default: AWS Account ID to Grant Permission. Do not modify
      CSAssumingRoleName:
        default: Assuming IAM Role Name.  Do not modify

Parameters:
  accountId:
    Description: This account ID
    Type: String

  organizationalUnitId:
    Description: Account Organisation ID
    Type: String

  FalconClientId:
    Description: Falcon OAuth2 Client ID.
    Type: String
    NoEcho: 'true'

  FalconSecret:
    Description: Falcon Oath2 API secret.
    Type: String
    NoEcho: 'true'

  CSAccountNumber:
    AllowedPattern: '[0-9]+'
    Description: The 12 digit AWS account number to grant access to.
    MaxLength: '12'
    MinLength: '12'
    Type: String
    Default: 292230061137

  CSAssumingRoleName:
    Description: Name of the IAM role used within CrowdStrike to assume access to
      your account.
    Type: String
    Default: "CrowdStrikeCSPMConnector"


Mappings:
  S3perRegion:
    us-east-1:
      NAME: crowdstrike-sa-resources-ct-us-east-1
    us-east-2:
      NAME: crowdstrike-sa-resources-ct-us-east-2
    us-west-2:
      NAME: crowdstrike-sa-resources-ct-us-west-2
    eu-west-1:
      NAME: crowdstrike-sa-resources-ct-eu-west-1
    ap-southeast-2:
      NAME: crowdstrike-sa-resources-ct-ap-southeast-2


Resources:


  lambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.7
      Content:
        S3Bucket: !FindInMap [ S3perRegion, !Ref "AWS::Region", NAME ]
        S3Key: layer.zip
      Description: Layer for requests package
      LayerName: requests-package


  manageInstanceFalconAPI:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          organizationalUnitId: !Ref organizationalUnitId
          CSAccountNumber: !Ref CSAccountNumber
          CSAssumingRoleName: !Ref CSAssumingRoleName
          aws_region: !Ref AWS::Region
      Code:
        S3Bucket: !FindInMap [ S3perRegion, !Ref "AWS::Region", NAME ]
        S3Key: register_new_horizon_account_v2.zip
      Layers:
        - !Ref lambdaLayer
      Handler: register_new_horizon_account_v2.lambda_handler
      MemorySize: 128
      Role: !GetAtt "CrowdStrikeCSPMRegisterAcctLambdaRole.Arn"
      Runtime: python3.7
      Timeout: 900

  TriggerLambda:
    Type: 'Custom::TriggerLambda'
    DependsOn:
      - CrowdStrikeCSPMRegisterAcctLambdaRole
    Properties:
      organizationalUnitId: !Ref organizationalUnitId
      FalconSecret: !Ref FalconSecret
      FalconClientId: !Ref FalconClientId
      ServiceToken: !GetAtt
        - manageInstanceFalconAPI
        - Arn

  CrowdStrikeCSPMRegisterAcctLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: launchLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            Condition: { }
      Path: /
      Policies:
        - PolicyName: List_secrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor2
              Effect: Allow
              Action:
                - secretsmanager:ListSecrets
              Resource: '*'
        - PolicyName: CreateStack
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor2
              Effect: Allow
              Action:
                - cloudformation:CreateStack
                - cloudformation:UpdateStack
                - cloudformation:DeleteStack
              Resource: !Join [ ':', [ 'arn:aws:cloudformation', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'stack/CrowdStrike-CSPM-Integration/*' ] ]
        - PolicyName: CloudFormation_ops
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor2
              Effect: Allow
              Action:
                - cloudformation:CreateStackSet
                - cloudformation:CreateStackInstances
                - cloudformation:DescribeStackSet
                - cloudformation:ListStackInstances
                - cloudformation:DeleteStackInstances
                - cloudformation:DeleteStackSet
              Resource: !Join [ ':', [ 'arn:aws:cloudformation', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'stackset/*:*' ] ]
        - PolicyName: Iam_Role
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor2
              Effect: Allow
              Action:
                - iam:DeleteRole
                - iam:DeleteRolePolicy
                - iam:getRolePolicy
                - iam:PutRolePolicy
                - iam:CreateRole
                - iam:GetRole
              Resource: '*'

        - PolicyName: PassRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor3
              Effect: Allow
              Action:
                - iam:PassRole
              Resource: !Join [ ':', [ 'arn:aws:iam:', !Ref "AWS::AccountId", 'role/service-role/AWSControlTowerStackSetRole' ] ]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
