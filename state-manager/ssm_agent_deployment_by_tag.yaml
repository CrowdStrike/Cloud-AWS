AWSTemplateFormatVersion: 2010-09-09

Description: CrowdStrike + AWS SSM integration

Parameters:

  EventBridgeRuleName:
    Description: EventBridge rule name for terminated instances
    Type: String
    Default: crowdstrike-falcon-agent-hide-host

  SSMAutomationAssumeRoleName:
    Description: IAM Role that will be assumed by the SSM Automation
    Type: String
    Default: crowdstrike-ssm-assume-role

  EventBridgeExecutionRoleName:
    Description: IAM Role that EventBridge will use to trigger the SSM Automation
    Type: String
    Default: crowdstrike-eventbridge-execution-role

  SSMAssociationName:
    Description: SSM Association for State Manager
    Type: String
    Default: CrowdStrike-DeployFalconAgent

  SSMDocumentName:
    Description: SSM Automation Document that installs the Falcon agent
    Type: String
    Default: CrowdStrike-DeployFalconAgent

  SSMPackageName:
    Description: SSM Distributor package that installs the Falcon agent
    Type: String
    Default: CrowdStrike-FalconAgent

  FalconClientID:
     Description: CrowdStrike API Client ID
     Type: String

  FalconClientSecret:
     Description: CrowdStrike API Client Secret
     Type: String

  FalconBaseURL:
     Description: CrowdStrike API Base URL
     Type: String
     Default: us1

  SSMParamPrefix:
    Description: Prefix used for SSM parameter names
    Type: String
    Default: CS-AGENT-AUTOMATION

  S3BucketName:
    Description: The name of the S3 bucket to use for attachments.
    Type: String

  Action:
    Description: Installation action to perform.
    Type: String
    AllowedValues:
      - Install
      - Uninstall
    Default: Install

  TargetTagKey:
    Description: Value of the Tag Key used to define the automation target
    Default: "SENSOR_DEPLOY"
    Type: String

  TargetTagValue:
    Description: Value of the Tag Value used to define the automation target
    Default: "TRUE"
    Type: String

  ScheduleRateExpression:
    Description: SSM assocation application cycle (minimum 30 minutes)
    Type: String
    Default: 30 minutes

  MaxConcurrency:
    Description: Percentage of total targets that SSM State Manager should run the SSM Automation concurrently
    Type: String
    Default: 100%

  MaxErrors:
    Description: Error threshold percentage before
    Type: String
    Default: 25%

  AutomationHandlerHash:
    Description: SHA256 hash of the agent-handler.zip file
    Type: String
    Default: "b8d23c8e7a61fc21de8ddc6ec117067492794c1ec63e0a00914fbeb5fbace204"

Resources:

  # EventBridge rule for terminated instances
  TerminateInstanceEventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Triggers CrowdStrike's SSM Automation document to remove terminated instance from the Falcon platform"
      EventBusName: default
      EventPattern:
        source:
          - "aws.ec2"
        detail-type:
          - "EC2 Instance State-change Notification"
        detail:
          state:
            - terminated
      Name: !Ref EventBridgeRuleName
      RoleArn: !GetAtt EventBridgeExecutionRole.Arn
      State: ENABLED
      Targets:
        - Id: "CrowdStrike-SSM-Automation-Document"
          Arn: !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${SSMDocumentName}:$DEFAULT
          RoleArn: !GetAtt EventBridgeExecutionRole.Arn
          InputTransformer:
            InputPathsMap:
              instance_id: $.detail.instance-id
            InputTemplate: !Sub
              - |- 
                {
                  "Action": ["Uninstall"],
                  "APIGatewayClientSecretKey": ["${client_secret}"],
                  "APIGatewayHostKey": ["${client_base}"],
                  "APIGatewayClientIDKey": ["${client_id}"],
                  "InstanceIds": ["<instance_id>"],
                  "InstallationType": ["Uninstall and reinstall"],
                  "AWSRegion": ["${client_region}"],
                  "PackageName": ["${client_package}"],
                  "AutomationAssumeRole": ["${client_role}"],
                  "EventType": ["EventBridge"],
                  "InstanceTagName": ["${tag_name}"],
                  "InstanceTagValue": ["${tag_value}"]
                } 
              - client_id: !Sub "${SSMParamPrefix}-CLIENTID"
                client_secret: !Sub "${SSMParamPrefix}-SECRET"
                client_base: !Sub "${SSMParamPrefix}-BASE"
                client_region: !Ref AWS::Region
                client_role: !GetAtt SSMAutomationAssumeRole.Arn
                client_package: !Ref SSMPackageName
                tag_name: !Ref TargetTagKey
                tag_value: !Ref TargetTagValue

  # SSM Association
  CrowdStrikeSSMAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name: !Ref CrowdStrikeAgentDeploymentSSMDocument
      ApplyOnlyAtCronInterval: false
      AssociationName: !Ref SSMAssociationName
      ScheduleExpression: !Sub rate(${ScheduleRateExpression})
      DocumentVersion: $DEFAULT
      MaxConcurrency: !Ref MaxConcurrency
      MaxErrors: !Ref MaxErrors
      AutomationTargetParameterName: InstanceIds
      Targets:
        - Key: !Sub tag:${TargetTagKey}
          Values: 
            - !Ref TargetTagValue
      Parameters:
        APIGatewayHostKey:
          - !Sub "${SSMParamPrefix}-BASE"
        APIGatewayClientIDKey:
          - !Sub "${SSMParamPrefix}-CLIENTID"
        APIGatewayClientSecretKey:
          - !Sub "${SSMParamPrefix}-SECRET"
        AWSRegion:
          - !Sub ${AWS::Region}
        Action:
          - !Ref Action
        AutomationAssumeRole:
          - !GetAtt SSMAutomationAssumeRole.Arn
        InstallationType:
          - Uninstall and reinstall
        PackageName:
          - !Ref SSMPackageName
        EventType:
          - Association

  # SSM Automation Document to install SSM Distribution
  CrowdStrikeAgentDeploymentSSMDocument:
    Type: AWS::SSM::Document
    Properties:
      Attachments:
          - Key: "SourceUrl"
            Values: 
              - !Sub "s3://${S3BucketName}/script"
        
      Name: !Ref SSMDocumentName
      DocumentFormat: YAML
      DocumentType: Automation
      Content:
        description: Automation Document for installing the Crowdstike's Falcon Sensor .
        schemaVersion: '0.3'
        assumeRole: '{{AutomationAssumeRole}}'
        parameters:
          AWSRegion:
            type: String
          InstallerParams:
            type: String
            default: ''
            description: (Optional) Enter CrowdStrike's install time params here. For more info refer Falcon console documentation.
          Action:
            type: String
            allowedValues:
              - Install
              - Uninstall
            description: (Required) Specify whether or not to install or uninstall the package.
            default: Install
          InstallationType:
            type: String
            allowedValues:
              - Uninstall and reinstall
            description: '(Optional) Specify the type of installation. Uninstall and reinstall: The application is taken offline until the reinstallation process completes. In-place update: The application is available while new or updated files are added to the installation.'
            default: Uninstall and reinstall
          PackageName:
            type: String
            description: '(Required) SSM Distributor name for the CrowdStrike Falcon agent'
          PackageVersion:
            type: String
            description: "(Optional) The version of the package to install or uninstall. If you do not specify a version, the system installs the latest published version by default. The system will only attempt to uninstall the version that is currently installed. If no version of the package is installed, the system returns an error."
            default: ''
          APIGatewayHostKey:
            type: String
            description: '(Required) Crowdstrike''s API Gateway host address Key, this key is retrieved from the Parameter Store Service.'
            default: CS_API_GATEWAY_HOST
          APIGatewayClientIDKey:
            type: String
            default: CS_API_GATEWAY_CLIENT_ID
            description: '(Required) Crowdstrike''s API Gateway Client ID Key, this key is retrieved from the Parameter Store Service.'
          APIGatewayClientSecretKey:
            type: String
            description: '(Required) Crowdstrike''s API Gateway Client Secret Key, this key is retrieved from the Parameter Store Service.'
            default: CS_API_GATEWAY_CLIENT_SECRET
          InstanceIds:
            type: StringList
            default: []
          AutomationAssumeRole:
            type: String
          EventType:
            type: String
            description: (Required) Will SSM Automation trigger through SSM Association (State Manager) or AWS EventBridge
            allowedValues:
              - Association
              - EventBridge
          InstanceTagName:
            type: String
            description: Tag to use to filter instances
            default: !Ref TargetTagKey
          InstanceTagValue:
            type: String
            description: Value of the tag to use to filter instances
            default: !Ref TargetTagValue
        # sha256 below must be updated to match current file sha: openssl dgst -sha256 agent-handler.zip
        files:
          agent-handler.zip:
            checksums:
              sha256: !Ref AutomationHandlerHash
        
        mainSteps:

          - name: EvaluateEventType
            action: aws:branch
            inputs:
              Choices:
                - Variable: '{{EventType}}'
                  StringEquals: 'EventBridge'
                  NextStep: CheckForTag
              Default: EvaluateAssociationAction

          - name: EvaluateAssociationAction
            action: aws:branch
            inputs:
              Choices:
                - NextStep: HideInstanceInFalcon
                  Variable: '{{Action}}'
                  StringEquals: 'Uninstall'
              Default: GetInstallParameters


          - name: CheckForTag
            action: 'aws:executeScript'
            inputs:
              Runtime: python3.7
              Handler: cs_install_automation.check_tags
              Attachment: "agent-handler.zip"
              Script: ""
              InputPayload:
                InstanceIds: '{{InstanceIds}}'
                AWSRegion: '{{AWSRegion}}'
                TagName: '{{InstanceTagName}}'
                TagValue: '{{InstanceTagValue}}'
            outputs:
              - Name: ContinueRun
                Selector: $.Payload.ContinueRun
                Type: String

          - name: EvaluateAction
            action: aws:branch
            inputs:
              Choices:
                - NextStep: Sleep
                  Variable: '{{CheckForTag.ContinueRun}}'
                  StringEquals: 'NO'
                - And:
                  - Variable: '{{Action}}'
                    StringEquals: 'Uninstall'
                  - Variable: '{{CheckForTag.ContinueRun}}'
                    StringEquals: 'YES'
                  NextStep: HideInstanceInFalcon
              Default: GetInstallParameters

          - name: CheckTerm
            action: aws:changeInstanceState
            maxAttempts: 2
            timeoutSeconds: 30
            onFailure: step:Sleep
            inputs:
              InstanceIds: "{{InstanceIds}}"
              CheckStateOnly: true
              DesiredState: terminated
            isCritical: false

          - name: HideInstanceInFalcon
            action: 'aws:executeScript'
            isEnd: true
            inputs:
              Runtime: python3.7
              Handler: cs_install_automation.hide_falcon_instance
              Attachment: "agent-handler.zip"
              Script: ""
              InputPayload:
                InstanceIds: '{{InstanceIds}}'
                AWSRegion: '{{AWSRegion}}'
                APIGatewayHostKey: '{{APIGatewayHostKey}}'
                APIGatewayClientIDKey: '{{APIGatewayClientIDKey}}'
                APIGatewayClientSecretKey: '{{APIGatewayClientSecretKey}}'

          - name: GetInstallParameters
            action: 'aws:executeScript'
            inputs:
              Runtime: python3.7
              Handler: cs_install_automation.get_install_params
              Attachment: "agent-handler.zip"
              Script: ""
              InputPayload:
                InstanceIds: '{{InstanceIds}}'
                AWSRegion: '{{AWSRegion}}'
                APIGatewayHostKey: '{{APIGatewayHostKey}}'
                APIGatewayClientIDKey: '{{APIGatewayClientIDKey}}'
                APIGatewayClientSecretKey: '{{APIGatewayClientSecretKey}}'
            outputs:
              - Name: CCID
                Selector: $.Payload.CCID
                Type: String
              - Name: SkipInstall
                Selector: $.Payload.SkipInstall
                Type: String

          - name: CheckRunning
            action: aws:changeInstanceState
            maxAttempts: 2
            timeoutSeconds: 30
            onFailure: step:CheckTerm
            inputs:
              InstanceIds: "{{InstanceIds}}"
              CheckStateOnly: true
              DesiredState: running
            isCritical: false

          - name: CheckSkip
            action: aws:branch
            inputs:
              Choices:
                - NextStep: Sleep
                  Variable: '{{GetInstallParameters.SkipInstall}}'
                  StringEquals: 'YES'
              Default: ExecuteDistributorPackage

          - name: ExecuteDistributorPackage
            action: 'aws:runCommand'
            isEnd: true
            inputs:
              InstanceIds: '{{InstanceIds}}'
              DocumentName: AWS-ConfigureAWSPackage
              Parameters:
                name: '{{PackageName}}'
                action: '{{Action}}'
                version: '{{PackageVersion}}'
                additionalArguments:
                  SSM_CS_CCID: '{{GetInstallParameters.CCID}}'
                  SSM_CS_INSTALLPARAMS: '{{InstallerParams}}'

          - name: Sleep
            action: aws:sleep
            inputs:
              Duration: PT1S
            isEnd: true

  # IAM Role for SSM Automation Document
  SSMAutomationAssumeRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Ref SSMAutomationAssumeRoleName
        Description: "CrowdStrike's IAM Role for SSM Automation that enables Falcon agent installation"
        Path: /
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: ssm.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
        Policies:
          - PolicyName: cs-allow-instance-describe
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - "ec2:DescribeInstances"
                    - "ec2:DescribeTags"
                  Resource: "*"

  # IAM Role for EventBridge
  EventBridgeExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref EventBridgeExecutionRoleName
      Description: "CrowdStrike's IAM Role for EventBridge to trigger SSM Document to offboard host from Falcon platform"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      MaxSessionDuration: 3600
      Policies:
        - PolicyName: cs-ssm-automation-pass-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action: ssm:StartAutomationExecution
                Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:automation-definition/${SSMDocumentName}:$DEFAULT
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt SSMAutomationAssumeRole.Arn
                Condition:
                  StringLikeIfExists:
                    iam:PassedToService: ssm.amazonaws.com
              
# SSM Parameters
  AutomationFalconClientId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${SSMParamPrefix}-CLIENTID"
      Type: String
      Value: !Ref 'FalconClientID'
      Description: Falcon Client ID for automation actions

  AutomationFalconClientSecret:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${SSMParamPrefix}-SECRET"
      Type: String
      Value: !Ref 'FalconClientSecret'
      Description: Falcon Client Secret for automation actions

  AutomationFalconBase:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "${SSMParamPrefix}-BASE"
      Type: String
      Value: !Ref 'FalconBaseURL'
      Description: Falcon API Base URL for automation actions

Outputs:
  SSMDocumentName:
      Description: "SSM Document name that installs the Falcon agent."
      Value: !Ref CrowdStrikeAgentDeploymentSSMDocument
