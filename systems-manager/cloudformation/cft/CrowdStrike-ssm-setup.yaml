AWSTemplateFormatVersion: '2010-09-09'
Description: This template sets CrowdStrike with AWS Systems Manager.
  The script will create an ssm package document and a ssm automation document
  together with the required parameters in the ssm parameter store.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: CrowdStrike API Details.
        Parameters:
          - APIGatewayHostKey
          - APIGatewayClientIDKey
          - APIGatewayClientSecretKey
      - Label:
          default: Package and Automation Documents
        Parameters:
          - InstallPackageName
          - AutomationDocumentName
    ParameterLabels:
      RoleName:
        default: IAM Role Name
      APIGatewayHostKey:
        default: URL for CrowdStrike API

Parameters:
  InstallPackageName:
    Description: The name of the install package that you wish to create
    Type: String
    Default: Local-FalconSensor
  AutomationDocumentName:
    Description: The name of the automation document that you wish to create
    Type: String
    Default: CS-Falcon-Install
  S3Bucket:
    Description: S3 bucket for lambda files
    Type: String
  APIGatewayHostKey:
    Description: CrowdStrike API Gateway
    AllowedValues: [ api.crowdstrike.com ]
    Type: String
  APIGatewayClientIDKey:
    Description: Falcon OAuth2 Client ID.
    Type: String
    NoEcho: 'true'
  APIGatewayClientSecretKey:
    Description: Falcon Oath2 API secret.
    Type: String
    NoEcho: 'true'
  FalconSensorDownloadVersion:
    Description: Enter the number of versions behind current that the install script should download from the API.
    Type: String
    AllowedValues: ['0','1','2']
    Default: 2


Resources:

  TriggerCreateParamsLambda:
    Type: 'Custom::TriggerCreateParamsLambda'
    DependsOn:
      - createSsmParamsLambdaRole
    Properties:
      CS_API_GATEWAY_HOST: !Ref APIGatewayHostKey
      CS_API_GATEWAY_CLIENT_ID: !Ref APIGatewayClientIDKey
      CS_API_GATEWAY_CLIENT_SECRET: !Ref APIGatewayClientSecretKey
      CS_SENSOR_VERSION: !Ref FalconSensorDownloadVersion
      ServiceToken: !GetAtt
        - createSsmParams
        - Arn

  lambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.7
      Content:
        S3Bucket: !Ref S3Bucket
        S3Key: layer.zip
      Description: Layer for falconpy package
      LayerName: falconpy-package

  createSsmParams:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          aws_region: !Ref AWS::Region
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: createSsmParams.zip
      Layers:
        - !Ref lambdaLayer
      Handler: createSsmParams.lambda_handler
      MemorySize: 128
      Role: !GetAtt "createSsmParamsLambdaRole.Arn"
      Runtime: python3.7
      Timeout: 60



  createSsmParamsLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Policies:
        - PolicyName: LambdaExecutionRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:DeleteParameter
                  - ssm:RemoveTagsFromResource
                  - ssm:GetParameterHistory
                  - ssm:AddTagsToResource
                  - ssm:GetParametersByPath
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:DescribeDocument
                  - ssm:DeleteParameters
                  - ssm:DeleteDocument
                  - ssm:CreateDocument
                  - ssm:UpdateDocument
                Resource:
                  - arn:aws:ssm:*:*:document/*
                  - arn:aws:ssm:*:*:parameter/*
              - Sid: VisualEditor1
                Effect: Allow
                Action: ssm:DescribeParameters
                Resource: "*"


  CrowdStrikeSSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ssm.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Description: String
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      RoleName: CrowdStrike-SSMExecutionRole

  TriggerCreateDocsLambda:
    Type: 'Custom::TriggerCreateDocsLambda'
    DependsOn:
      - LambdaDocsSetup
    Properties:
      ServiceToken: !GetAtt
        - LambdaDocsSetup
        - Arn

  LambdaDocsSetup:
    Type: AWS::Lambda::Function
    Properties:
      Environment:
        Variables:
          aws_region: !Ref AWS::Region
          ssm_automation_doc_name: !Ref AutomationDocumentName
          s3bucket: !Ref S3Bucket
          document_name: !Ref InstallPackageName
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: lambda_ssm_setup.zip
      Layers:
        - !Ref lambdaLayer
      Handler: lambda_ssm_setup.lambda_handler
      MemorySize: 128
      Role: !GetAtt "createSsmParamsLambdaRole.Arn"
      Runtime: python3.7
      Timeout: 120